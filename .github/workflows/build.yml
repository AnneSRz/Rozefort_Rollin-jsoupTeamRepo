name: Build  # Name of the workflow

on:  # Events that trigger this workflow
  push:  # Trigger when a commit is pushed to the repository
  pull_request:  # Trigger when a pull request is opened or updated

jobs:  # Define the jobs that will be executed

  test:  # Job name is 'test'
    runs-on: ${{ matrix.os }}  # Use matrix value to set the OS dynamically

    strategy:  # Define a matrix strategy for running multiple configurations
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]  # Specify OS to run on
        java: [8, 17, 21]  # Specify JVM versions to test with

      fail-fast: false  # Don't stop the workflow if one job fails

    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}  # Dynamic job name for easier identification in UI

    steps:  # Steps within the job
      - name: Checkout  # Step to check out the code from the repository
        uses: actions/checkout@v4  # Checkout action to pull the latest code

      - name: Set up JDK ${{ matrix.java }}  # Set up the JDK for the current job based on matrix
        uses: actions/setup-java@v4  # Action to install Java
        with:
          java-version: ${{ matrix.java }}  # Use the specific JDK version from matrix
          distribution: 'zulu'  # Use the Zulu OpenJDK distribution
          cache: 'maven'  # Cache Maven dependencies to improve build times

      - name: Maven Compile  # Step to compile the project using Maven
        run: mvn -X compile -B --file pom.xml  # Run Maven with debug output in batch mode

      - name: Maven Verify  # Step to verify the project (typically running tests)
        run: mvn -X verify -B --file pom.xml  # Run Maven with debug output in batch mode
